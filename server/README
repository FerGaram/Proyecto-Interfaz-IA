# üöÄ Grafo API

Este proyecto es una API desarrollada con FastAPI para procesar grafos y ejecutar algoritmos de b√∫squeda informada como A* o b√∫squeda √°vara. Utiliza archivos `.txt` como entrada y genera visualizaciones o rutas √≥ptimas como salida.

## üìÅ Estructura del Proyecto

grafo_api/
‚îÇ
‚îú‚îÄ‚îÄ app/
‚îÇ ‚îú‚îÄ‚îÄ API.py # Endpoints principales de FastAPI
‚îÇ ‚îú‚îÄ‚îÄ Busquedas.py # Implementaci√≥n de algoritmos de  b√∫squeda
‚îÇ
‚îú‚îÄ‚îÄ utils/
‚îÇ ‚îú‚îÄ‚îÄ GenerarJson.py # Funciones auxiliares para el procesamiento de datos
‚îÇ
‚îú‚îÄ‚îÄ tests/
‚îÇ ‚îî‚îÄ‚îÄ ejemplo_entrada.txt # Archivo de entrada de prueba
‚îÇ
‚îú‚îÄ‚îÄ requirements.txt # Dependencias del proyecto
‚îú‚îÄ‚îÄ Dockerfile # Imagen de Docker
‚îú‚îÄ‚îÄ docker-compose.yml # Orquestaci√≥n con Docker Compose
‚îî‚îÄ‚îÄ main.py # Punto de entrada de FastAPI


## üê≥ C√≥mo Ejecutar con Docker

### üîß Construir el contenedor

# Crear y correr por primera vez
"docker-compose up --build"

Luego verifica que el contenedor se haya creado correctamente y que la API est√© corriendo con "docker ps".

# Detener temporalmente
"docker-compose stop"

# Reanudar o iniciar el contenedor una vez creado
"docker-compose start"


### üåê Acceder a la API

Abre tu navegador y ve a `http://localhost:8000` para ver la documentaci√≥n interactiva de la API generada por FastAPI.


###  Documentaci√≥n interactiva

* Swagger UI: "http://127.0.0.1:8000/docs"
* ReDoc: "http://127.0.0.1:8000/redoc"

### üìù Notas

- La API est√° dise√±ada para ser extensible, por lo que puedes agregar m√°s algoritmos o funcionalidades seg√∫n sea necesario.
- Los archivos de entrada deben seguir el formato especificado en `tests/ejemplo_entrada.txt`.
- La documentaci√≥n de la API est√° disponible en `/docs` y `/redoc`.


### üöÄ Forma de usarlo
En el archivo `tests/ejemplo_entrada.txt` se encuentra un ejemplo de c√≥mo debe ser el formato de entrada. 
Puedes modificarlo o crear nuevos archivos siguiendo el mismo formato.

luego en la terminal ejecuta el siguiente comando:
C:\grafo_api> "python utils/generarJSON.py"

Para cabiar el tipo de b√∫squeda, modifica la variable `tipo_busqueda` en el archivo `utils/generarJSON.py` a "A*" o "Avara".
en la l√≠nea 93     data = generar_json_para_api("tests/ejemplo_entrada.txt", "A", "C", "A*")
